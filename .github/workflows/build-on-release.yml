name: Build on release

on:
  push:
    branches:
      - 'extension-release-*'
#      - 'master'

jobs:
  build-all:
#    if: github.event.created
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false,
          fetch-depth: 0,
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Get last tag
#        run: echo "LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
#      - name: Check the last tag
#        if: ${{ env.LAST_TAG == '' }}
#        run: echo "LAST_TAG=1.0.0" >> $GITHUB_ENV
#      - name: Update patch
#        run: |
#          parts = $LAST_TAG.split(".")
#          print(parts)

#      - name: Get second last tag
#        run: echo "NEW_TAG2=${ git describe --tags $(git rev-list --tags --max-count=1)}"
#      - name: Print tags
#        run: |
#          echo $NEW_TAG
#          echo $NEW_TAG2

#      - name: Dump GitHub context
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: echo "$GITHUB_CONTEXT"
#      - name: Show GitHub ref
#        run: echo "$GITHUB_REF"
#      - name: GitHub Tag Name example
#        run: |
#          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
#          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
#      - name: GitHub Tag Name example
#        run: |
#          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
#          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
#      - name: Set output
#        id: vars
#        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
#      - name: Check output
#        env:
#          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
#        run: |
#          echo $RELEASE_VERSION
#          echo ${{ steps.vars.outputs.tag }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
#      - uses: ncipollo/release-action@v1
#        with:
#          bodyFile: "README.md"
#          generateReleaseNotes: true
#          tag: ${{ env.LAST_TAG }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - run: sudo apt-get update
#      - name: configure github auth for npm
#        run: git config --global url."https://${{ secrets.GH_DEPENDENCIES_TOKEN }}:x-oauth-basic@github.com/".insteadOf https://x-oauth-basic@github.com/
      - name: Install NPM Dependencies
        run: npm ci --silent | cat
      - name: Create a zip
        run: zip -r -q chrome.zip dist/chrome
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
#      - name: Build dev chrome extension
#        run: npm run chrome-dev -- --env version=1.2.3
#      - name: Build production chrome extension
#        run: npm run chrome-prod -- --env version=1.2.3
#      - name: Build production firefox extension
#        run: npm run firefox-prod
#      - name: Build production edge extension
#        run: npm run edge-prod
