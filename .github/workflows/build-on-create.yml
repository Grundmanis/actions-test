name: Extension release

on:
  push:
    branches:
      - extension-release-*

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false,
          fetch-depth: 0,
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Bump major version and push tag
        if: github.event.created
        id: major_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: major
#          dry_run: true
          release_branches: extension-release-*

      - name: Bump patch version
        if: github.event.created != true
        id: patch_tag
        run: echo "new_tag=`echo $(git describe --tags --abbrev=0 | awk -F. '{OFS="."; $NF+=1; print $0}')`" >> "$GITHUB_OUTPUT"


#      - name: Push patch tag
#        if: github.event.created != true
#        uses: anothrNick/github-tag-action@1.64.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          WITH_V: true
#          DEFAULT_BUMP: patch
#          CUSTOM_TAG: ${{ steps.patch_tag.outputs.new_tag }}
#          DRY_RUN: true

      - name: Push patch tag
        if: github.event.created != true
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.patch_tag.outputs.new_tag }}
      - name: Set major tag env
        if: github.event.created
        run: |
          echo "NEW_TAG=${{ steps.major_tag.outputs.new_tag }}" >> $GITHUB_ENV
          echo ${NEW_TAG}
          echo "VERSION=${NEW_TAG#v}" >> $GITHUB_ENV
          echo Release type ${{ steps.major_tag.outputs.release_type }}
      - name: Set patch tag env
        if: github.event.created != true
        run: |
          TAG=${{ steps.patch_tag.outputs.new_tag }}
          echo "NEW_TAG=${TAG}" >> $GITHUB_ENV
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      - name: Display NEW TAG env
        run: |
          echo ${{ env.NEW_TAG }}
          echo ${{ env.VERSION }}

      - name: Create a release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          artifacts: dist/chrome/chrome.zip, dist/firefox/firefox.zip
          skipIfReleaseExists: true
